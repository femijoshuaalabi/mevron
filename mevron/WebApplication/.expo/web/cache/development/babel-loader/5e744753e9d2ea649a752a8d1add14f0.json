{
    "ast": null,
    "code": "import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\GavelProjects\\\\mevron\\\\mevron\\\\WebApplication\\\\_CrossBasement\\\\CrossCore\\\\components\\\\Select\\\\components\\\\Toggle.js\";\nvar _excluded = [\"onTouch\", \"checked\", \"iconColor\"];\nvar __jsx = React.createElement;\nimport React, { memo } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../constants/Colors\";\nimport Icon from \"./Icon\";\n\nfunction Toggle(_ref) {\n  var onTouch = _ref.onTouch,\n      checked = _ref.checked,\n      _ref$iconColor = _ref.iconColor,\n      iconColor = _ref$iconColor === void 0 ? Colors.primary : _ref$iconColor,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(TouchableOpacity, _extends({\n    onPress: onTouch,\n    hitSlop: {\n      top: 10,\n      bottom: 10,\n      left: 10,\n      right: 10\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }), __jsx(Icon, {\n    name: checked ? 'deleteCircle' : 'addCircle',\n    fill: iconColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default memo(Toggle);",
    "map": {
        "version": 3,
        "sources": [
            "C:/GavelProjects/mevron/mevron/WebApplication/_CrossBasement/CrossCore/components/Select/components/Toggle.js"
        ],
        "names": [
            "React",
            "memo",
            "Colors",
            "Icon",
            "Toggle",
            "onTouch",
            "checked",
            "iconColor",
            "primary",
            "props",
            "top",
            "bottom",
            "left",
            "right"
        ],
        "mappings": ";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;AAEA,OAAOC,MAAP;AACA,OAAOC,IAAP;;AAEA,SAASC,MAAT,OAA4E;AAAA,MAA1DC,OAA0D,QAA1DA,OAA0D;AAAA,MAAjDC,OAAiD,QAAjDA,OAAiD;AAAA,4BAAxCC,SAAwC;AAAA,MAAxCA,SAAwC,+BAA5BL,MAAM,CAACM,OAAqB;AAAA,MAATC,KAAS;;AAC1E,SACE,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEJ,OAA3B;AAAoC,IAAA,OAAO,EAAE;AAAEK,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,MAAM,EAAE,EAAnB;AAAuBC,MAAAA,IAAI,EAAE,EAA7B;AAAiCC,MAAAA,KAAK,EAAE;AAAxC;AAA7C,KAA+FJ,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,OAAO,GAAG,cAAH,GAAoB,WAAvC;AAAoD,IAAA,IAAI,EAAEC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeN,IAAI,CAACG,MAAD,CAAnB",
        "sourcesContent": [
            "import React, { memo } from 'react'\nimport { TouchableOpacity } from 'react-native'\nimport Colors from '../constants/Colors'\nimport Icon from './Icon'\n\nfunction Toggle({ onTouch, checked, iconColor = Colors.primary, ...props }) {\n  return (\n    <TouchableOpacity onPress={onTouch} hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }} {...props}>\n      <Icon name={checked ? 'deleteCircle' : 'addCircle'} fill={iconColor} />\n    </TouchableOpacity>\n  )\n}\n\nexport default memo(Toggle)\n"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
