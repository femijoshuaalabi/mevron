{
    "ast": null,
    "code": "var _jsxFileName = \"C:\\\\GavelProjects\\\\mevron\\\\mevron\\\\WebApplication\\\\src\\\\pages\\\\Reports\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { MultiSelect } from \"../../../_CrossBasement/CrossCore/components/Selects\";\nexport default function Reports() {\n  var options = [{\n    label: 'Grapes üçá',\n    value: 'grapes'\n  }, {\n    label: 'Mango ü•≠',\n    value: 'mango'\n  }, {\n    label: 'Strawberry üçì',\n    value: 'strawberry'\n  }];\n\n  var _useState = useState([]),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Select Fruits\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, JSON.stringify(selected)), __jsx(MultiSelect, {\n    options: options,\n    selected: selected,\n    onChange: setSelected,\n    labelledBy: 'Select',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n}",
    "map": {
        "version": 3,
        "sources": ["C:/GavelProjects/mevron/mevron/WebApplication/src/pages/Reports/index.js"],
        "names": [
            "React",
            "useState",
            "MultiSelect",
            "Reports",
            "options",
            "label",
            "value",
            "selected",
            "setSelected",
            "JSON",
            "stringify"
        ],
        "mappings": ";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,MAAMC,OAAO,GAAG,CACZ;AAAEC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADY,EAEZ;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAFY,EAGZ;AAAED,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAHY,CAAhB;;AAMA,kBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAN,CAFJ,EAGI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,OAAtB;AAA+B,IAAA,QAAQ,EAAEG,QAAzC;AAAmD,IAAA,QAAQ,EAAEC,WAA7D;AAA0E,IAAA,UAAU,EAAE,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH",
        "sourcesContent": [
            "import React, { useState } from 'react';\nimport { MultiSelect } from '@mevron/cross-core/components/Selects';\n\nexport default function Reports() {\n    const options = [\n        { label: 'Grapes üçá', value: 'grapes' },\n        { label: 'Mango ü•≠', value: 'mango' },\n        { label: 'Strawberry üçì', value: 'strawberry' },\n    ];\n\n    const [selected, setSelected] = useState([]);\n\n    return (\n        <div>\n            <h1>Select Fruits</h1>\n            <pre>{JSON.stringify(selected)}</pre>\n            <MultiSelect options={options} selected={selected} onChange={setSelected} labelledBy={'Select'} />\n        </div>\n    );\n}\n"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
