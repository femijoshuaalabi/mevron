{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\GavelProjects\\\\JusticeClock\\\\JusticeClock\\\\WebApplication\\\\_CrossBasement\\\\CrossCore\\\\components\\\\Selects\\\\select-panel\\\\select-item.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport { useKey } from \"../hooks/use-key\";\nimport { KEY } from \"../lib/constants\";\nimport DefaultItemRenderer from \"./default-item\";\n\nvar SelectItem = function SelectItem(_ref) {\n  var _ref$itemRenderer = _ref.itemRenderer,\n      ItemRenderer = _ref$itemRenderer === void 0 ? DefaultItemRenderer : _ref$itemRenderer,\n      option = _ref.option,\n      checked = _ref.checked,\n      tabIndex = _ref.tabIndex,\n      disabled = _ref.disabled,\n      onSelectionChanged = _ref.onSelectionChanged,\n      onClick = _ref.onClick;\n  var itemRef = useRef();\n\n  var onOptionCheck = function onOptionCheck(e) {\n    toggleChecked();\n    e.preventDefault();\n  };\n\n  var toggleChecked = function toggleChecked() {\n    if (!disabled) {\n      onSelectionChanged(!checked);\n    }\n  };\n\n  var handleClick = function handleClick(e) {\n    toggleChecked();\n    onClick(e);\n  };\n\n  useKey([KEY.ENTER, KEY.SPACE], onOptionCheck, {\n    target: itemRef\n  });\n  return __jsx(\"label\", {\n    className: \"select-item \".concat(checked && \"selected\"),\n    role: \"option\",\n    \"aria-selected\": checked,\n    tabIndex: tabIndex,\n    ref: itemRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(ItemRenderer, {\n    option: option,\n    checked: checked,\n    onClick: handleClick,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SelectItem;","map":{"version":3,"sources":["C:/GavelProjects/JusticeClock/JusticeClock/WebApplication/_CrossBasement/CrossCore/components/Selects/select-panel/select-item.tsx"],"names":["React","useRef","useKey","KEY","DefaultItemRenderer","SelectItem","itemRenderer","ItemRenderer","option","checked","tabIndex","disabled","onSelectionChanged","onClick","itemRef","onOptionCheck","e","toggleChecked","preventDefault","handleClick","ENTER","SPACE","target"],"mappings":";;;;AAGA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,SAASC,MAAT;AACA,SAASC,GAAT;AAEA,OAAOC,mBAAP;;AAYA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAQK;AAAA,+BAPtBC,YAOsB;AAAA,MAPRC,YAOQ,kCAPOH,mBAOP;AAAA,MANtBI,MAMsB,QANtBA,MAMsB;AAAA,MALtBC,OAKsB,QALtBA,OAKsB;AAAA,MAJtBC,QAIsB,QAJtBA,QAIsB;AAAA,MAHtBC,QAGsB,QAHtBA,QAGsB;AAAA,MAFtBC,kBAEsB,QAFtBA,kBAEsB;AAAA,MADtBC,OACsB,QADtBA,OACsB;AACtB,MAAMC,OAAY,GAAGb,MAAM,EAA3B;;AAEA,MAAMc,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AAC3BC,IAAAA,aAAa;AACbD,IAAAA,CAAC,CAACE,cAAF;AACD,GAHD;;AAKA,MAAMD,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAI,CAACN,QAAL,EAAe;AACbC,MAAAA,kBAAkB,CAAC,CAACH,OAAF,CAAlB;AACD;AACF,GAJD;;AAMA,MAAMU,WAAW,GAAG,SAAdA,WAAc,CAACH,CAAD,EAAO;AACzBC,IAAAA,aAAa;AACbJ,IAAAA,OAAO,CAACG,CAAD,CAAP;AACD,GAHD;;AAKAd,EAAAA,MAAM,CAAC,CAACC,GAAG,CAACiB,KAAL,EAAYjB,GAAG,CAACkB,KAAhB,CAAD,EAAyBN,aAAzB,EAAwC;AAAEO,IAAAA,MAAM,EAAER;AAAV,GAAxC,CAAN;AAEA,SACE;AACE,IAAA,SAAS,wBAAiBL,OAAO,IAAI,UAA5B,CADX;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,qBAAeA,OAHjB;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,GAAG,EAAEI,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEN,MADV;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,OAAO,EAAEU,WAHX;AAIE,IAAA,QAAQ,EAAER,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAgBD,CA7CD;;AA+CA,eAAeN,UAAf","sourcesContent":["/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport React, { useRef } from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { KEY } from \"../lib/constants\";\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  const onOptionCheck = (e) => {\n    toggleChecked();\n    e.preventDefault();\n  };\n\n  const toggleChecked = () => {\n    if (!disabled) {\n      onSelectionChanged(!checked);\n    }\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  useKey([KEY.ENTER, KEY.SPACE], onOptionCheck, { target: itemRef });\n\n  return (\n    <label\n      className={`select-item ${checked && \"selected\"}`}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n"]},"metadata":{},"sourceType":"module"}