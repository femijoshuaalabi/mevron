{
    "ast": null,
    "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\GavelProjects\\\\mevron\\\\mevron\\\\WebApplication\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LandingPage } from \"../_CrossBasement/CrossPage/LandingPage\";\nimport * as Font from 'expo-font';\nexport default function App() {\n  var _useState = useState(false),\n      loaded = _useState[0],\n      setLoaded = _useState[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var message;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                FontAwesome5: require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome5.ttf')\n              }));\n\n            case 3:\n              _context.next = 9;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              message = _context.t0.message;\n              console.log(\"Error loading font: \".concat(message));\n\n            case 9:\n              _context.prev = 9;\n              setLoaded(true);\n              return _context.finish(9);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5, 9, 12]], Promise);\n    })();\n  }, []);\n  return __jsx(React.Fragment, null, loaded ? __jsx(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Welcome to Expo + Next.js \\uD83D\\uDC4B\"), __jsx(LandingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })) : __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Loading...\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 16\n  }\n});",
    "map": {
        "version": 3,
        "sources": ["C:/GavelProjects/mevron/mevron/WebApplication/pages/index.js"],
        "names": [
            "React",
            "useEffect",
            "useState",
            "LandingPage",
            "Font",
            "App",
            "loaded",
            "setLoaded",
            "loadAsync",
            "FontAwesome5",
            "require",
            "message",
            "console",
            "log",
            "styles",
            "container",
            "text",
            "StyleSheet",
            "create",
            "flex",
            "justifyContent",
            "alignItems",
            "fontSize"
        ],
        "mappings": ";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,WAAT;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC1B,kBAA4BH,QAAQ,CAAC,KAAD,CAApC;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AACAN,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEaG,IAAI,CAACI,SAAL,CAAe;AAEjBC,gBAAAA,YAAY,EAAEC,OAAO,CAAC,kFAAD;AAFJ,eAAf,CAFb;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMcC,cAAAA,OANd,eAMcA,OANd;AAQOC,cAAAA,OAAO,CAACC,GAAR,+BAAmCF,OAAnC;;AARP;AAAA;AAUOJ,cAAAA,SAAS,CAAC,IAAD,CAAT;AAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAaH,GAdQ,EAcN,EAdM,CAAT;AAeA,SACI,4BACKD,MAAM,GACH,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,EAEI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADG,GAMH,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPR,CADJ;AAYH;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL,GADkB;AAM7BL,EAAAA,IAAI,EAAE;AACFM,IAAAA,QAAQ,EAAE;AADR;AANuB,CAAlB,CAAf",
        "sourcesContent": [
            "// @generated: @expo/next-adapter@2.1.52\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { LandingPage } from '@mevron/cross-page/LandingPage';\nimport * as Font from 'expo-font';\n\nexport default function App() {\n    const [loaded, setLoaded] = useState(false);\n    useEffect(() => {\n        (async () => {\n            try {\n                await Font.loadAsync({\n                    // You can get this font on Github: https://shorturl.at/chEHS\n                    FontAwesome5: require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/FontAwesome5.ttf'),\n                });\n            } catch ({ message }) {\n                // This will be called if something is broken\n                console.log(`Error loading font: ${message}`);\n            } finally {\n                setLoaded(true);\n            }\n        })();\n    }, []);\n    return (\n        <>\n            {loaded ? (\n                <View style={styles.container}>\n                    <Text style={styles.text}>Welcome to Expo + Next.js ðŸ‘‹</Text>\n                    <LandingPage />\n                </View>\n            ) : (\n                <Text>Loading...</Text>\n            )}\n        </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    text: {\n        fontSize: 16,\n    },\n});\n"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
