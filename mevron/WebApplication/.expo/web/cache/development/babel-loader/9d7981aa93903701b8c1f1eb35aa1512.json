{
    "ast": null,
    "code": "import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _jsxFileName = \"C:\\\\GavelProjects\\\\mevron\\\\mevron\\\\WebApplication\\\\_CrossBasement\\\\CrossPage\\\\BacklogCase\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { xorBy } from 'lodash';\nimport { Select, DatePicker, TextInput } from \"../../CrossCore/components/Forms\";\nimport styled from 'rn-css';\nimport { colors, Text } from \"../../CrossCore/components/typo\";\nvar FormRow = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    flex-direction: row;\\n\"])));\nvar FormRowContainer = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    flex: 1;\\n    margin: 5px;\\n\"])));\nvar DateRangeContainer = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    flex-direction: row;\\n\"])));\nvar GenerateButton = styled.TouchableOpacity(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    height: 40px;\\n    width: 200px;\\n    background-color: \", \";\\n    margin-top: 10px;\\n    border-radius: 5px;\\n    justify-content: center;\\n    align-items: center;\\n\"])), colors.defaultColor);\nvar GenerateButtonText = styled(Text)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    color: #fff;\\n\"])));\nexport default function BacklogCase() {\n  var _useState = useState([]),\n      selectedTeams = _useState[0],\n      setSelectedTeams = _useState[1];\n\n  var _useState2 = useState(new Date()),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      endDate = _useState3[0],\n      setEndDate = _useState3[1];\n\n  var _useState4 = useState([]),\n      gender = _useState4[0],\n      setGender = _useState4[1];\n\n  var genderList = [{\n    item: 'Male',\n    id: '1'\n  }, {\n    item: 'Female',\n    id: '2'\n  }];\n  var K_OPTIONS = [{\n    item: 'Legal Opinion (Draft) ',\n    id: 'LegalOption'\n  }, {\n    item: 'Legal Advice Final (Prosecution)',\n    id: 'LegalAdvice'\n  }, {\n    item: 'Legal Advice Final (Non-Prosecution) ',\n    id: 'LegalAdviceFinal2'\n  }];\n\n  function onMultiChange() {\n    return function (item) {\n      return setSelectedTeams(xorBy(selectedTeams, [item], 'id'));\n    };\n  }\n\n  var onChangeGender = function onChangeGender(val) {\n    return setGender(val);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(TextInput, {\n    title: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, __jsx(TextInput, {\n    title: \"Middile Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, __jsx(TextInput, {\n    title: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))), __jsx(FormRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, __jsx(TextInput, {\n    title: \"Phone Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(TextInput, {\n    title: \"Age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    title: \"Gender\",\n    options: genderList,\n    value: gender,\n    onChange: onChangeGender,\n    hideInputFilter: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }))), __jsx(FormRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(DatePicker, {\n    title: \"Date/Time (Case Received)\",\n    selected: startDate,\n    onChange: function onChange(date) {\n      return setStartDate(date);\n    },\n    peekNextMonth: true,\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    dropdownMode: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, __jsx(TextInput, {\n    title: \"Age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  })), __jsx(FormRowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    title: \"Gender\",\n    options: genderList,\n    value: gender,\n    onChange: onChangeGender,\n    hideInputFilter: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }))), __jsx(Select, {\n    title: \"Select Categories\",\n    options: K_OPTIONS,\n    selectedValues: selectedTeams,\n    onMultiSelect: onMultiChange(),\n    onTapClose: onMultiChange(),\n    isMulti: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), __jsx(GenerateButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, __jsx(GenerateButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Generate\")));\n}",
    "map": {
        "version": 3,
        "sources": ["C:/GavelProjects/mevron/mevron/WebApplication/_CrossBasement/CrossPage/BacklogCase/index.js"],
        "names": [
            "React",
            "useState",
            "xorBy",
            "Select",
            "DatePicker",
            "TextInput",
            "styled",
            "colors",
            "Text",
            "FormRow",
            "View",
            "FormRowContainer",
            "DateRangeContainer",
            "GenerateButton",
            "TouchableOpacity",
            "defaultColor",
            "GenerateButtonText",
            "BacklogCase",
            "selectedTeams",
            "setSelectedTeams",
            "Date",
            "startDate",
            "setStartDate",
            "endDate",
            "setEndDate",
            "gender",
            "setGender",
            "genderList",
            "item",
            "id",
            "K_OPTIONS",
            "onMultiChange",
            "onChangeGender",
            "val",
            "date"
        ],
        "mappings": ";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB;AAEA,IAAMC,OAAO,GAAGH,MAAM,CAACI,IAAV,iGAAb;AAIA,IAAMC,gBAAgB,GAAGL,MAAM,CAACI,IAAV,yGAAtB;AAKA,IAAME,kBAAkB,GAAGN,MAAM,CAACI,IAAV,mGAAxB;AAIA,IAAMG,cAAc,GAAGP,MAAM,CAACQ,gBAAV,qPAGIP,MAAM,CAACQ,YAHX,CAApB;AAUA,IAAMC,kBAAkB,GAAGV,MAAM,CAACE,IAAD,CAAT,2FAAxB;AAIA,eAAe,SAASS,WAAT,GAAuB;AAClC,kBAA0ChB,QAAQ,CAAC,EAAD,CAAlD;AAAA,MAAOiB,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAkClB,QAAQ,CAAC,IAAImB,IAAJ,EAAD,CAA1C;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA8BrB,QAAQ,CAAC,IAAImB,IAAJ,EAAD,CAAtC;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,mBAA4BvB,QAAQ,CAAC,EAAD,CAApC;AAAA,MAAOwB,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,UAAU,GAAG,CACf;AACIC,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,EAAE,EAAE;AAFR,GADe,EAKf;AACID,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,EAAE,EAAE;AAFR,GALe,CAAnB;AAWA,MAAMC,SAAS,GAAG,CACd;AACIF,IAAAA,IAAI,EAAE,wBADV;AAEIC,IAAAA,EAAE,EAAE;AAFR,GADc,EAKd;AACID,IAAAA,IAAI,EAAE,kCADV;AAEIC,IAAAA,EAAE,EAAE;AAFR,GALc,EASd;AACID,IAAAA,IAAI,EAAE,uCADV;AAEIC,IAAAA,EAAE,EAAE;AAFR,GATc,CAAlB;;AAcA,WAASE,aAAT,GAAyB;AACrB,WAAO,UAACH,IAAD;AAAA,aAAUT,gBAAgB,CAACjB,KAAK,CAACgB,aAAD,EAAgB,CAACU,IAAD,CAAhB,EAAwB,IAAxB,CAAN,CAA1B;AAAA,KAAP;AACH;;AAED,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD;AAAA,WAASP,SAAS,CAACO,GAAD,CAAlB;AAAA,GAAvB;;AACA,SACI,4BACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADJ,EAYI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,OAAO,EAAEN,UAFb;AAGI,IAAA,KAAK,EAAEF,MAHX;AAII,IAAA,QAAQ,EAAEO,cAJd;AAKI,IAAA,eAAe,EAAE,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CAZJ,EA8BI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,KAAK,EAAC,2BADV;AAEI,IAAA,QAAQ,EAAEX,SAFd;AAGI,IAAA,QAAQ,EAAE,kBAACa,IAAD;AAAA,aAAUZ,YAAY,CAACY,IAAD,CAAtB;AAAA,KAHd;AAII,IAAA,aAAa,MAJjB;AAKI,IAAA,iBAAiB,MALrB;AAMI,IAAA,gBAAgB,MANpB;AAOI,IAAA,YAAY,EAAC,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAYI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,EAeI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,OAAO,EAAEP,UAFb;AAGI,IAAA,KAAK,EAAEF,MAHX;AAII,IAAA,QAAQ,EAAEO,cAJd;AAKI,IAAA,eAAe,EAAE,KALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,CA9BJ,EAwDI,MAAC,MAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,OAAO,EAAEF,SAFb;AAGI,IAAA,cAAc,EAAEZ,aAHpB;AAII,IAAA,aAAa,EAAEa,aAAa,EAJhC;AAKI,IAAA,UAAU,EAAEA,aAAa,EAL7B;AAMI,IAAA,OAAO,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDJ,EAgEI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAhEJ,CADJ;AAsEH",
        "sourcesContent": [
            "import React, { useState } from 'react';\r\nimport { xorBy } from 'lodash';\r\nimport { Select, DatePicker, TextInput } from '@mevron/cross-core/components/Forms';\r\nimport styled from 'rn-css';\r\nimport { colors, Text } from '@mevron/cross-core/components/typo';\r\n\r\nconst FormRow = styled.View`\r\n    flex-direction: row;\r\n`;\r\n\r\nconst FormRowContainer = styled.View`\r\n    flex: 1;\r\n    margin: 5px;\r\n`;\r\n\r\nconst DateRangeContainer = styled.View`\r\n    flex-direction: row;\r\n`;\r\n\r\nconst GenerateButton = styled.TouchableOpacity`\r\n    height: 40px;\r\n    width: 200px;\r\n    background-color: ${colors.defaultColor};\r\n    margin-top: 10px;\r\n    border-radius: 5px;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst GenerateButtonText = styled(Text)`\r\n    color: #fff;\r\n`;\r\n\r\nexport default function BacklogCase() {\r\n    const [selectedTeams, setSelectedTeams] = useState([]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const [gender, setGender] = useState([]);\r\n    const genderList = [\r\n        {\r\n            item: 'Male',\r\n            id: '1',\r\n        },\r\n        {\r\n            item: 'Female',\r\n            id: '2',\r\n        },\r\n    ];\r\n\r\n    const K_OPTIONS = [\r\n        {\r\n            item: 'Legal Opinion (Draft) ',\r\n            id: 'LegalOption',\r\n        },\r\n        {\r\n            item: 'Legal Advice Final (Prosecution)',\r\n            id: 'LegalAdvice',\r\n        },\r\n        {\r\n            item: 'Legal Advice Final (Non-Prosecution) ',\r\n            id: 'LegalAdviceFinal2',\r\n        },\r\n    ];\r\n    function onMultiChange() {\r\n        return (item) => setSelectedTeams(xorBy(selectedTeams, [item], 'id'));\r\n    }\r\n\r\n    const onChangeGender = (val) => setGender(val);\r\n    return (\r\n        <>\r\n            <FormRow>\r\n                <FormRowContainer>\r\n                    <TextInput title=\"First Name\" />\r\n                </FormRowContainer>\r\n                <FormRowContainer>\r\n                    <TextInput title=\"Middile Name\" />\r\n                </FormRowContainer>\r\n                <FormRowContainer>\r\n                    <TextInput title=\"Last Name\" />\r\n                </FormRowContainer>\r\n            </FormRow>\r\n            <FormRow>\r\n                <FormRowContainer>\r\n                    <TextInput title=\"Phone Number\" />\r\n                </FormRowContainer>\r\n                <FormRowContainer>\r\n                    <TextInput title=\"Age\" />\r\n                </FormRowContainer>\r\n                <FormRowContainer>\r\n                    <Select\r\n                        title=\"Gender\"\r\n                        options={genderList}\r\n                        value={gender}\r\n                        onChange={onChangeGender}\r\n                        hideInputFilter={false}\r\n                    />\r\n                </FormRowContainer>\r\n            </FormRow>\r\n\r\n            <FormRow>\r\n                <FormRowContainer>\r\n                    <DatePicker\r\n                        title=\"Date/Time (Case Received)\"\r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                        peekNextMonth\r\n                        showMonthDropdown\r\n                        showYearDropdown\r\n                        dropdownMode=\"select\"\r\n                    />\r\n                </FormRowContainer>\r\n                <FormRowContainer>\r\n                    <TextInput title=\"Age\" />\r\n                </FormRowContainer>\r\n                <FormRowContainer>\r\n                    <Select\r\n                        title=\"Gender\"\r\n                        options={genderList}\r\n                        value={gender}\r\n                        onChange={onChangeGender}\r\n                        hideInputFilter={false}\r\n                    />\r\n                </FormRowContainer>\r\n            </FormRow>\r\n\r\n            <Select\r\n                title=\"Select Categories\"\r\n                options={K_OPTIONS}\r\n                selectedValues={selectedTeams}\r\n                onMultiSelect={onMultiChange()}\r\n                onTapClose={onMultiChange()}\r\n                isMulti\r\n            />\r\n            <GenerateButton>\r\n                <GenerateButtonText>Generate</GenerateButtonText>\r\n            </GenerateButton>\r\n        </>\r\n    );\r\n}\r\n"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
