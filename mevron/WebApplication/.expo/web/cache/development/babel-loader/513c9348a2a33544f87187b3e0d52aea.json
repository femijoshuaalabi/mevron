{
    "ast": null,
    "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\GavelProjects\\\\mevron\\\\mevron\\\\WebApplication\\\\_CrossBasement\\\\CrossCore\\\\components\\\\Selects\\\\select-panel\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\nvar FocusType;\n\n(function (FocusType) {\n  FocusType[FocusType[\"SEARCH\"] = 0] = \"SEARCH\";\n  FocusType[FocusType[\"NONE\"] = -1] = \"NONE\";\n})(FocusType || (FocusType = {}));\n\nvar SelectPanel = function SelectPanel() {\n  var _useMultiSelect = useMultiSelect(),\n      t = _useMultiSelect.t,\n      onChange = _useMultiSelect.onChange,\n      options = _useMultiSelect.options,\n      setOptions = _useMultiSelect.setOptions,\n      value = _useMultiSelect.value,\n      customFilterOptions = _useMultiSelect.filterOptions,\n      ItemRenderer = _useMultiSelect.ItemRenderer,\n      disabled = _useMultiSelect.disabled,\n      disableSearch = _useMultiSelect.disableSearch,\n      hasSelectAll = _useMultiSelect.hasSelectAll,\n      ClearIcon = _useMultiSelect.ClearIcon,\n      debounceDuration = _useMultiSelect.debounceDuration,\n      isCreatable = _useMultiSelect.isCreatable,\n      onCreateOption = _useMultiSelect.onCreateOption;\n\n  var listRef = useRef();\n  var searchInputRef = useRef();\n\n  var _useState = useState(\"\"),\n      searchText = _useState[0],\n      setSearchText = _useState[1];\n\n  var _useState2 = useState(options),\n      filteredOptions = _useState2[0],\n      setFilteredOptions = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      searchTextForFilter = _useState3[0],\n      setSearchTextForFilter = _useState3[1];\n\n  var _useState4 = useState(0),\n      focusIndex = _useState4[0],\n      setFocusIndex = _useState4[1];\n\n  var debouncedSearch = useCallback(debounce(function (query) {\n    return setSearchTextForFilter(query);\n  }, debounceDuration), []);\n  var skipIndex = useMemo(function () {\n    var start = 0;\n    if (!disableSearch) start += 1;\n    if (hasSelectAll) start += 1;\n    return start;\n  }, [disableSearch, hasSelectAll]);\n  var selectAllOption = {\n    label: searchText ? t(\"selectAllFiltered\") : t(\"selectAll\"),\n    value: \"\"\n  };\n\n  var selectAllValues = function selectAllValues(checked) {\n    var filteredValues = filteredOptions.filter(function (o) {\n      return !o.disabled;\n    }).map(function (o) {\n      return o.value;\n    });\n\n    if (checked) {\n      var selectedValues = value.map(function (o) {\n        return o.value;\n      });\n      var finalSelectedValues = [].concat(_toConsumableArray(selectedValues), _toConsumableArray(filteredValues));\n      return (customFilterOptions ? filteredOptions : options).filter(function (o) {\n        return finalSelectedValues.includes(o.value);\n      });\n    }\n\n    return value.filter(function (o) {\n      return !filteredValues.includes(o.value);\n    });\n  };\n\n  var selectAllChanged = function selectAllChanged(checked) {\n    var newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  var handleSearchChange = function handleSearchChange(e) {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  var handleClear = function handleClear() {\n    var _searchInputRef$curre;\n\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef === null || searchInputRef === void 0 ? void 0 : (_searchInputRef$curre = searchInputRef.current) === null || _searchInputRef$curre === void 0 ? void 0 : _searchInputRef$curre.focus();\n  };\n\n  var handleItemClicked = function handleItemClicked(index) {\n    return setFocusIndex(index);\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    switch (e.code) {\n      case KEY.ARROW_UP:\n        updateFocus(-1);\n        break;\n\n      case KEY.ARROW_DOWN:\n        updateFocus(1);\n        break;\n\n      default:\n        return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useKey([KEY.ARROW_DOWN, KEY.ARROW_UP], handleKeyDown, {\n    target: listRef\n  });\n\n  var handleSearchFocus = function handleSearchFocus() {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  var handleOnCreateOption = function handleOnCreateOption() {\n    var newOption;\n    return _regeneratorRuntime.async(function handleOnCreateOption$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newOption = {\n              label: searchText,\n              value: searchText,\n              __isNew__: true\n            };\n\n            if (!onCreateOption) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(onCreateOption(searchText));\n\n          case 4:\n            newOption = _context.sent;\n\n          case 5:\n            setOptions([newOption].concat(_toConsumableArray(options)));\n            handleClear();\n            onChange([].concat(_toConsumableArray(value), [newOption]));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getFilteredOptions = function getFilteredOptions() {\n    return _regeneratorRuntime.async(function getFilteredOptions$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!customFilterOptions) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(customFilterOptions(options, searchTextForFilter));\n\n          case 3:\n            _context2.t0 = _context2.sent;\n            _context2.next = 7;\n            break;\n\n          case 6:\n            _context2.t0 = filterOptions(options, searchTextForFilter);\n\n          case 7:\n            return _context2.abrupt(\"return\", _context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateFocus = function updateFocus(offset) {\n    var newFocus = focusIndex + offset;\n    newFocus = Math.max(0, newFocus);\n    newFocus = Math.min(newFocus, options.length + Math.max(skipIndex - 1, 0));\n    setFocusIndex(newFocus);\n  };\n\n  useEffect(function () {\n    var _listRef$current, _listRef$current$quer;\n\n    listRef === null || listRef === void 0 ? void 0 : (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : (_listRef$current$quer = _listRef$current.querySelector(\"[tabIndex='\".concat(focusIndex, \"']\"))) === null || _listRef$current$quer === void 0 ? void 0 : _listRef$current$quer.focus();\n  }, [focusIndex]);\n\n  var _useMemo = useMemo(function () {\n    var filteredOptionsList = filteredOptions.filter(function (o) {\n      return !o.disabled;\n    });\n    return [filteredOptionsList.every(function (o) {\n      return value.findIndex(function (v) {\n        return v.value === o.value;\n      }) !== -1;\n    }), filteredOptionsList.length !== 0];\n  }, [filteredOptions, value]),\n      isAllOptionSelected = _useMemo[0],\n      hasSelectableOptions = _useMemo[1];\n\n  useEffect(function () {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n  return __jsx(\"div\", {\n    className: \"select-panel\",\n    role: \"listbox\",\n    ref: listRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, !disableSearch && __jsx(\"div\", {\n    className: \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    placeholder: t(\"search\"),\n    type: \"text\",\n    \"aria-describedby\": t(\"search\"),\n    onChange: handleSearchChange,\n    onFocus: handleSearchFocus,\n    value: searchText,\n    ref: searchInputRef,\n    tabIndex: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"search-clear-button\",\n    hidden: !searchText,\n    onClick: handleClear,\n    \"aria-label\": t(\"clearSearch\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, ClearIcon || __jsx(Cross, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 27\n    }\n  }))), __jsx(\"ul\", {\n    className: \"options\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, hasSelectAll && hasSelectableOptions && __jsx(SelectItem, {\n    tabIndex: skipIndex === 1 ? 0 : 1,\n    checked: isAllOptionSelected,\n    option: selectAllOption,\n    onSelectionChanged: selectAllChanged,\n    onClick: function onClick() {\n      return handleItemClicked(1);\n    },\n    itemRenderer: ItemRenderer,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), filteredOptions.length ? __jsx(SelectList, {\n    skipIndex: skipIndex,\n    options: filteredOptions,\n    onClick: function onClick(_e, index) {\n      return handleItemClicked(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }) : isCreatable ? __jsx(\"li\", {\n    onClick: handleOnCreateOption,\n    className: \"select-item creatable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"\".concat(t(\"create\"), \" \\\"\").concat(searchText, \"\\\"\")) : __jsx(\"li\", {\n    className: \"no-options\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, t(\"noOptions\"))));\n};\n\nexport default SelectPanel;",
    "map": {
        "version": 3,
        "sources": [
            "C:/GavelProjects/mevron/mevron/WebApplication/_CrossBasement/CrossCore/components/Selects/select-panel/index.tsx"
        ],
        "names": [
            "React",
            "useCallback",
            "useEffect",
            "useMemo",
            "useRef",
            "useState",
            "useKey",
            "useMultiSelect",
            "KEY",
            "debounce",
            "filterOptions",
            "Cross",
            "SelectItem",
            "SelectList",
            "FocusType",
            "SelectPanel",
            "t",
            "onChange",
            "options",
            "setOptions",
            "value",
            "customFilterOptions",
            "ItemRenderer",
            "disabled",
            "disableSearch",
            "hasSelectAll",
            "ClearIcon",
            "debounceDuration",
            "isCreatable",
            "onCreateOption",
            "listRef",
            "searchInputRef",
            "searchText",
            "setSearchText",
            "filteredOptions",
            "setFilteredOptions",
            "searchTextForFilter",
            "setSearchTextForFilter",
            "focusIndex",
            "setFocusIndex",
            "debouncedSearch",
            "query",
            "skipIndex",
            "start",
            "selectAllOption",
            "label",
            "selectAllValues",
            "checked",
            "filteredValues",
            "filter",
            "o",
            "map",
            "selectedValues",
            "finalSelectedValues",
            "includes",
            "selectAllChanged",
            "newOptions",
            "handleSearchChange",
            "e",
            "target",
            "SEARCH",
            "handleClear",
            "current",
            "focus",
            "handleItemClicked",
            "index",
            "handleKeyDown",
            "code",
            "ARROW_UP",
            "updateFocus",
            "ARROW_DOWN",
            "stopPropagation",
            "preventDefault",
            "handleSearchFocus",
            "handleOnCreateOption",
            "newOption",
            "__isNew__",
            "getFilteredOptions",
            "offset",
            "newFocus",
            "Math",
            "max",
            "min",
            "length",
            "querySelector",
            "filteredOptionsList",
            "every",
            "findIndex",
            "v",
            "isAllOptionSelected",
            "hasSelectableOptions",
            "then",
            "_e"
        ],
        "mappings": "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",
        "sourcesContent": [
            "/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\nenum FocusType {\n  SEARCH = 0,\n  NONE = -1,\n}\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    setOptions,\n    value,\n    filterOptions: customFilterOptions,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n    isCreatable,\n    onCreateOption,\n  } = useMultiSelect();\n\n  const listRef = useRef<any>();\n  const searchInputRef = useRef<any>();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(0);\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const skipIndex = useMemo(() => {\n    let start = 0;\n\n    if (!disableSearch) start += 1; // if search is enabled then +1 to skipIndex\n    if (hasSelectAll) start += 1; // if select-all is enabled then +1 to skipIndex\n\n    return start;\n  }, [disableSearch, hasSelectAll]);\n\n  const selectAllOption = {\n    label: searchText ? t(\"selectAllFiltered\") : t(\"selectAll\"),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return (customFilterOptions ? filteredOptions : options).filter((o) => finalSelectedValues.includes(o.value));\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef?.current?.focus();\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  // Arrow Key Navigation\n  const handleKeyDown = (e) => {\n    switch (e.code) {\n      case KEY.ARROW_UP:\n        updateFocus(-1);\n        break;\n      case KEY.ARROW_DOWN:\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useKey([KEY.ARROW_DOWN, KEY.ARROW_UP], handleKeyDown, {\n    target: listRef,\n  });\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleOnCreateOption = async () => {\n    let newOption = { label: searchText, value: searchText, __isNew__: true };\n\n    // if custom `onCreateOption` is given then this will call this\n    if (onCreateOption) {\n      newOption = await onCreateOption(searchText);\n    }\n\n    // adds created value to existing options\n    setOptions([newOption, ...options]);\n    handleClear();\n\n    onChange([...value, newOption]);\n  };\n\n  const getFilteredOptions = async () =>\n    customFilterOptions\n      ? await customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(0, newFocus);\n    newFocus = Math.min(newFocus, options.length + Math.max(skipIndex - 1, 0));\n    setFocusIndex(newFocus);\n  };\n\n  useEffect(() => {\n    listRef?.current?.querySelector(`[tabIndex='${focusIndex}']`)?.focus();\n  }, [focusIndex]);\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [filteredOptions, value]);\n\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" ref={listRef}>\n      {!disableSearch && (\n        <div className=\"search\">\n          <input\n            placeholder={t(\"search\")}\n            type=\"text\"\n            aria-describedby={t(\"search\")}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n            ref={searchInputRef}\n            tabIndex={0}\n          />\n          <button\n            type=\"button\"\n            className=\"search-clear-button\"\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={t(\"clearSearch\")}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      <ul className=\"options\">\n        {hasSelectAll && hasSelectableOptions && (\n          <SelectItem\n            tabIndex={skipIndex === 1 ? 0 : 1}\n            checked={isAllOptionSelected}\n            option={selectAllOption}\n            onSelectionChanged={selectAllChanged}\n            onClick={() => handleItemClicked(1)}\n            itemRenderer={ItemRenderer}\n            disabled={disabled}\n          />\n        )}\n\n        {filteredOptions.length ? (\n          <SelectList\n            skipIndex={skipIndex}\n            options={filteredOptions}\n            onClick={(_e, index) => handleItemClicked(index)}\n          />\n        ) : isCreatable ? (\n          <li onClick={handleOnCreateOption} className=\"select-item creatable\">\n            {`${t(\"create\")} \"${searchText}\"`}\n          </li>\n        ) : (\n          <li className=\"no-options\">{t(\"noOptions\")}</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default SelectPanel;\n"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
