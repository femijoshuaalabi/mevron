{
    "ast": null,
    "code": "import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _jsxFileName = \"C:\\\\GavelProjects\\\\mevron\\\\mevron\\\\WebApplication\\\\_CrossBasement\\\\CrossPage\\\\BacklogCase\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { xorBy } from 'lodash';\nimport { Select, DatePicker, TextInput } from \"../../CrossCore/components/Forms\";\nimport styled from 'rn-css';\nimport { colors, Text } from \"../../CrossCore/components/typo\";\nvar FormRow = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    flex-direction: row;\\n\"])));\nvar DateRangeContainer = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    flex-direction: row;\\n\"])));\nvar GenerateButton = styled.TouchableOpacity(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    height: 40px;\\n    width: 200px;\\n    background-color: \", \";\\n    margin-top: 10px;\\n    border-radius: 5px;\\n    justify-content: center;\\n    align-items: center;\\n\"])), colors.defaultColor);\nvar GenerateButtonText = styled(Text)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    color: #fff;\\n\"])));\nexport default function BacklogCase() {\n  var _useState = useState([]),\n      selectedTeams = _useState[0],\n      setSelectedTeams = _useState[1];\n\n  var _useState2 = useState(new Date()),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      endDate = _useState3[0],\n      setEndDate = _useState3[1];\n\n  var K_OPTIONS = [{\n    item: 'Legal Opinion (Draft) ',\n    id: 'LegalOption'\n  }, {\n    item: 'Legal Advice Final (Prosecution)',\n    id: 'LegalAdvice'\n  }, {\n    item: 'Legal Advice Final (Non-Prosecution) ',\n    id: 'LegalAdviceFinal2'\n  }];\n\n  function onMultiChange() {\n    return function (item) {\n      return setSelectedTeams(xorBy(selectedTeams, [item], 'id'));\n    };\n  }\n\n  return __jsx(React.Fragment, null, __jsx(FormRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(TextInput, {\n    title: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), __jsx(TextInput, {\n    title: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), __jsx(Select, {\n    title: \"Select Categories\",\n    options: K_OPTIONS,\n    selectedValues: selectedTeams,\n    onMultiSelect: onMultiChange(),\n    onTapClose: onMultiChange(),\n    isMulti: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), __jsx(DateRangeContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(DatePicker, {\n    title: \"Select Date (From)\",\n    selected: startDate,\n    onChange: function onChange(date) {\n      return setStartDate(date);\n    },\n    peekNextMonth: true,\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    dropdownMode: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), __jsx(DatePicker, {\n    title: \"Select Date (To)\",\n    selected: endDate,\n    onChange: function onChange(date) {\n      return setEndDate(date);\n    },\n    peekNextMonth: true,\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    dropdownMode: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), __jsx(GenerateButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(GenerateButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Generate\")));\n}",
    "map": {
        "version": 3,
        "sources": ["C:/GavelProjects/mevron/mevron/WebApplication/_CrossBasement/CrossPage/BacklogCase/index.js"],
        "names": [
            "React",
            "useState",
            "xorBy",
            "Select",
            "DatePicker",
            "TextInput",
            "styled",
            "colors",
            "Text",
            "FormRow",
            "View",
            "DateRangeContainer",
            "GenerateButton",
            "TouchableOpacity",
            "defaultColor",
            "GenerateButtonText",
            "BacklogCase",
            "selectedTeams",
            "setSelectedTeams",
            "Date",
            "startDate",
            "setStartDate",
            "endDate",
            "setEndDate",
            "K_OPTIONS",
            "item",
            "id",
            "onMultiChange",
            "date"
        ],
        "mappings": "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",
        "sourcesContent": [
            "import React, { useState } from 'react';\r\nimport { xorBy } from 'lodash';\r\nimport { Select, DatePicker, TextInput } from '@mevron/cross-core/components/Forms';\r\nimport styled from 'rn-css';\r\nimport { colors, Text } from '@mevron/cross-core/components/typo';\r\n\r\nconst FormRow = styled.View`\r\n    flex-direction: row;\r\n`;\r\n\r\nconst DateRangeContainer = styled.View`\r\n    flex-direction: row;\r\n`;\r\n\r\nconst GenerateButton = styled.TouchableOpacity`\r\n    height: 40px;\r\n    width: 200px;\r\n    background-color: ${colors.defaultColor};\r\n    margin-top: 10px;\r\n    border-radius: 5px;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst GenerateButtonText = styled(Text)`\r\n    color: #fff;\r\n`;\r\n\r\nexport default function BacklogCase() {\r\n    const [selectedTeams, setSelectedTeams] = useState([]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const K_OPTIONS = [\r\n        {\r\n            item: 'Legal Opinion (Draft) ',\r\n            id: 'LegalOption',\r\n        },\r\n        {\r\n            item: 'Legal Advice Final (Prosecution)',\r\n            id: 'LegalAdvice',\r\n        },\r\n        {\r\n            item: 'Legal Advice Final (Non-Prosecution) ',\r\n            id: 'LegalAdviceFinal2',\r\n        },\r\n    ];\r\n    function onMultiChange() {\r\n        return (item) => setSelectedTeams(xorBy(selectedTeams, [item], 'id'));\r\n    }\r\n    return (\r\n        <>\r\n            <FormRow>\r\n                <TextInput title=\"First Name\" />\r\n                <TextInput title=\"First Name\" />\r\n            </FormRow>\r\n            <Select\r\n                title=\"Select Categories\"\r\n                options={K_OPTIONS}\r\n                selectedValues={selectedTeams}\r\n                onMultiSelect={onMultiChange()}\r\n                onTapClose={onMultiChange()}\r\n                isMulti\r\n            />\r\n            <DateRangeContainer>\r\n                <DatePicker\r\n                    title=\"Select Date (From)\"\r\n                    selected={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    peekNextMonth\r\n                    showMonthDropdown\r\n                    showYearDropdown\r\n                    dropdownMode=\"select\"\r\n                />\r\n                <DatePicker\r\n                    title=\"Select Date (To)\"\r\n                    selected={endDate}\r\n                    onChange={(date) => setEndDate(date)}\r\n                    peekNextMonth\r\n                    showMonthDropdown\r\n                    showYearDropdown\r\n                    dropdownMode=\"select\"\r\n                />\r\n            </DateRangeContainer>\r\n            <GenerateButton>\r\n                <GenerateButtonText>Generate</GenerateButtonText>\r\n            </GenerateButton>\r\n        </>\r\n    );\r\n}\r\n"
        ]
    },
    "metadata": {},
    "sourceType": "module"
}
